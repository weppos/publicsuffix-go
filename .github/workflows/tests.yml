name: Tests
on: [push, pull_request]
env:
  GO111MODULE: on

jobs:

  build:
    name: Build
    strategy:
      matrix:
        go-version: [1.8, 1.13]
        platform: [ubuntu-latest, windows-latest]
    runs-on: ${{ matrix.platform }}
    steps:

    - name: Set up Go
      uses: actions/setup-go@v1
      with:
        go-version: ${{ matrix.go-version }}
      id: go

    - name: Check out code into the Go module directory
      uses: actions/checkout@v2

    - name: Get dependencies
      run: go get -v -t -d ./...

    - name: List packages
      run: |
        go list -f '{{.Dir}}' ./...
        go list -f '{{.Root}}' ./...

    - name: Run tests
      run: |
        echo "" > coverage.txt

        for d in $(go list  -f '{{.Dir}}' ./... | grep -v vendor); do
            go test -v -race -coverprofile profile.out -covermode atomic "$d"
            if [ -f profile.out ]; then
                cat profile.out >> coverage.txt
                rm profile.out
            fi
        done
